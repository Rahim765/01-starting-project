{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-projects\\\\01-starting-project\\\\src\\\\components\\\\Steps\\\\Wizard.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport StepWizard from \"react-step-wizard\"; //import Nav from \"./Nav\";\n////import Plugs from \"./Plugs\";\n// import styles from \"./wizard.less\";\n// import transitions from \"./transitions.less\";\n\n/* eslint react/prop-types: 0 */\n\n/**\r\n * A basic demonstration of how to use the step wizard\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Wizard = () => {\n  _s();\n\n  const [state, updateState] = useState({\n    form: {} // transitions: {\n    //   enterRight: `${transitions.animated} ${transitions.enterRight}`,\n    //   enterLeft: `${transitions.animated} ${transitions.enterLeft}`,\n    //   exitRight: `${transitions.animated} ${transitions.exitRight}`,\n    //   exitLeft: `${transitions.animated} ${transitions.exitLeft}`,\n    //   intro: `${transitions.animated} ${transitions.intro}`\n    // }\n    // demo: true, // uncomment to see more\n\n  });\n\n  const updateForm = (key, value) => {\n    const {\n      form\n    } = state;\n    form[key] = value;\n    updateState({ ...state,\n      form\n    });\n  }; // Do something on step change\n\n\n  const onStepChange = stats => {// console.log(stats);\n  };\n\n  const setInstance = SW => updateState({ ...state,\n    SW\n  });\n\n  const {\n    SW,\n    demo\n  } = state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"React Step Wizard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jumbotron\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `col-12 col-sm-6 offset-sm-3 `,\n          children: /*#__PURE__*/_jsxDEV(StepWizard, {\n            onStepChange: onStepChange,\n            isHashEnabled: true,\n            transitions: state.transitions // comment out for default transitions\n            // nav={<Nav />}\n            ,\n            instance: setInstance,\n            children: [/*#__PURE__*/_jsxDEV(First, {\n              hashKey: \"FirstStep\",\n              update: updateForm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Second, {\n              form: state.form\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Last, {\n              hashKey: \"TheEnd!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), demo && SW && /*#__PURE__*/_jsxDEV(InstanceDemo, {\n      SW: SW\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Wizard, \"zZfmARsHlLPpsN1LW0kteJ14W+4=\");\n\n_c = Wizard;\nexport default Wizard;\n/** Demo of using instance */\n\nconst InstanceDemo = _ref => {\n  let {\n    SW\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Control from outside component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-secondary\",\n      onClick: SW.previousStep,\n      children: \"Previous Step\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-secondary\",\n      onClick: SW.nextStep,\n      children: \"Next Step\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 3\n  }, this);\n};\n/**\r\n * Stats Component - to illustrate the possible functions\r\n * Could be used for nav buttons or overview\r\n */\n\n\n_c2 = InstanceDemo;\n\nconst Stats = _ref2 => {\n  let {\n    currentStep,\n    firstStep,\n    goToStep,\n    lastStep,\n    nextStep,\n    previousStep,\n    totalSteps,\n    step\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }, this), step > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-default btn-block\",\n      onClick: previousStep,\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), step < totalSteps ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      onClick: nextStep,\n      children: \"Continue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success btn-block\",\n      onClick: nextStep,\n      children: \"Finish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: \"21px\",\n        fontWeight: \"200\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Other Functions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Current Step: \", currentStep]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Total Steps: \", totalSteps]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-block btn-default\",\n        onClick: firstStep,\n        children: \"First Step\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-block btn-default\",\n        onClick: lastStep,\n        children: \"Last Step\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-block btn-default\",\n        onClick: () => goToStep(2),\n        children: \"Go to Step 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 3\n  }, this);\n};\n/** Steps */\n\n\n_c3 = Stats;\n\nconst First = props => {\n  const update = e => {\n    props.update(e.target.name, e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-center\",\n      children: \"Welcome! Have a look around!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"First Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"firstname\",\n      placeholder: \"First Name\",\n      onChange: update\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      step: 1,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = First;\n\nconst Second = props => {\n  const validate = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.form.firstname && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Hey \", props.form.firstname, \"! \\uD83D\\uDC4B\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 32\n    }, this), \"I've added validation to the previous button.\", /*#__PURE__*/_jsxDEV(Stats, {\n      step: 2,\n      ...props,\n      previousStep: validate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = Second;\n\nconst Last = props => {\n  const submit = () => {\n    alert(\"You did it! Yay!\"); // eslint-disable-line\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"This is the last step in this example!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      step: 4,\n      ...props,\n      nextStep: submit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n\n_c6 = Last;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Wizard\");\n$RefreshReg$(_c2, \"InstanceDemo\");\n$RefreshReg$(_c3, \"Stats\");\n$RefreshReg$(_c4, \"First\");\n$RefreshReg$(_c5, \"Second\");\n$RefreshReg$(_c6, \"Last\");","map":{"version":3,"sources":["D:/React-projects/01-starting-project/src/components/Steps/Wizard.js"],"names":["React","Fragment","useState","useEffect","StepWizard","Wizard","state","updateState","form","updateForm","key","value","onStepChange","stats","setInstance","SW","demo","transitions","InstanceDemo","previousStep","nextStep","Stats","currentStep","firstStep","goToStep","lastStep","totalSteps","step","fontSize","fontWeight","First","props","update","e","target","name","Second","validate","firstname","Last","submit","alert"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport StepWizard from \"react-step-wizard\";\r\n\r\n//import Nav from \"./Nav\";\r\n////import Plugs from \"./Plugs\";\r\n\r\n// import styles from \"./wizard.less\";\r\n// import transitions from \"./transitions.less\";\r\n/* eslint react/prop-types: 0 */\r\n\r\n/**\r\n * A basic demonstration of how to use the step wizard\r\n */\r\nconst Wizard = () => {\r\n  const [state, updateState] = useState({\r\n    form: {}\r\n    // transitions: {\r\n    //   enterRight: `${transitions.animated} ${transitions.enterRight}`,\r\n    //   enterLeft: `${transitions.animated} ${transitions.enterLeft}`,\r\n    //   exitRight: `${transitions.animated} ${transitions.exitRight}`,\r\n    //   exitLeft: `${transitions.animated} ${transitions.exitLeft}`,\r\n    //   intro: `${transitions.animated} ${transitions.intro}`\r\n    // }\r\n    // demo: true, // uncomment to see more\r\n  });\r\n\r\n  const updateForm = (key, value) => {\r\n    const { form } = state;\r\n\r\n    form[key] = value;\r\n    updateState({\r\n      ...state,\r\n      form\r\n    });\r\n  };\r\n\r\n  // Do something on step change\r\n  const onStepChange = (stats) => {\r\n    // console.log(stats);\r\n  };\r\n\r\n  const setInstance = (SW) =>\r\n    updateState({\r\n      ...state,\r\n      SW\r\n    });\r\n\r\n  const { SW, demo } = state;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h3>React Step Wizard</h3>\r\n      <div className={\"jumbotron\"}>\r\n        <div className=\"row\">\r\n          <div className={`col-12 col-sm-6 offset-sm-3 `}>\r\n            <StepWizard\r\n              onStepChange={onStepChange}\r\n              isHashEnabled\r\n              transitions={state.transitions} // comment out for default transitions\r\n              // nav={<Nav />}\r\n              instance={setInstance}\r\n            >\r\n              <First hashKey={\"FirstStep\"} update={updateForm} />\r\n              <Second form={state.form} />\r\n              <Last hashKey={\"TheEnd!\"} />\r\n            </StepWizard>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {demo && SW && <InstanceDemo SW={SW} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wizard;\r\n\r\n/** Demo of using instance */\r\nconst InstanceDemo = ({ SW }) => (\r\n  <Fragment>\r\n    <h4>Control from outside component</h4>\r\n    <button className={\"btn btn-secondary\"} onClick={SW.previousStep}>\r\n      Previous Step\r\n    </button>\r\n    &nbsp;\r\n    <button className={\"btn btn-secondary\"} onClick={SW.nextStep}>\r\n      Next Step\r\n    </button>\r\n  </Fragment>\r\n);\r\n\r\n/**\r\n * Stats Component - to illustrate the possible functions\r\n * Could be used for nav buttons or overview\r\n */\r\nconst Stats = ({\r\n  currentStep,\r\n  firstStep,\r\n  goToStep,\r\n  lastStep,\r\n  nextStep,\r\n  previousStep,\r\n  totalSteps,\r\n  step\r\n}) => (\r\n  <div>\r\n    <hr />\r\n    {step > 1 && (\r\n      <button className=\"btn btn-default btn-block\" onClick={previousStep}>\r\n        Go Back\r\n      </button>\r\n    )}\r\n    {step < totalSteps ? (\r\n      <button className=\"btn btn-primary btn-block\" onClick={nextStep}>\r\n        Continue\r\n      </button>\r\n    ) : (\r\n      <button className=\"btn btn-success btn-block\" onClick={nextStep}>\r\n        Finish\r\n      </button>\r\n    )}\r\n    <hr />\r\n    <div style={{ fontSize: \"21px\", fontWeight: \"200\" }}>\r\n      <h4>Other Functions</h4>\r\n      <div>Current Step: {currentStep}</div>\r\n      <div>Total Steps: {totalSteps}</div>\r\n      <button className=\"btn btn-block btn-default\" onClick={firstStep}>\r\n        First Step\r\n      </button>\r\n      <button className=\"btn btn-block btn-default\" onClick={lastStep}>\r\n        Last Step\r\n      </button>\r\n      <button className=\"btn btn-block btn-default\" onClick={() => goToStep(2)}>\r\n        Go to Step 2\r\n      </button>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n/** Steps */\r\n\r\nconst First = (props) => {\r\n  const update = (e) => {\r\n    props.update(e.target.name, e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"text-center\">Welcome! Have a look around!</h3>\r\n\r\n      <label>First Name</label>\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        name=\"firstname\"\r\n        placeholder=\"First Name\"\r\n        onChange={update}\r\n      />\r\n      <Stats step={1} {...props} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Second = (props) => {\r\n  const validate = () => {\r\n \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.form.firstname && <h3>Hey {props.form.firstname}! 👋</h3>}\r\n      I've added validation to the previous button.\r\n      <Stats step={2} {...props} previousStep={validate} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Last = (props) => {\r\n  const submit = () => {\r\n    alert(\"You did it! Yay!\"); // eslint-disable-line\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={\"text-center\"}>\r\n        <h3>This is the last step in this example!</h3>\r\n        <hr />\r\n      </div>\r\n      <Stats step={4} {...props} nextStep={submit} />\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}