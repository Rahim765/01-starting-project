{"ast":null,"code":"import React__default, { useContext, createElement } from 'react';\nimport clsx from 'clsx';\nimport { createUseStyles } from 'react-jss';\nimport Color from 'color';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar stepStyleDefaults = {\n  activeBgColor: '#ed1d24',\n  activeTextColor: '#ffffff',\n  completedBgColor: '#a10308',\n  completedTextColor: '#ffffff',\n  inactiveBgColor: '#e0e0e0',\n  inactiveTextColor: '#ffffff',\n  size: '2em',\n  circleFontSize: '1rem',\n  borderRadius: '50%'\n};\nvar HOVER_COLOR_DEFAULT_RATIO = 0.15;\nvar ACTIVE_COLOR_DEFAULT_RATIO = 0.2;\n\nvar shadeOrTintColor = function shadeOrTintColor(colorString, ratio) {\n  var color = Color(colorString);\n  return color.isDark() ? color.darken(ratio).hex() : color.lighten(ratio).hex();\n};\n\nvar useStepStyles = /*#__PURE__*/createUseStyles({\n  StepMain: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  StepButton: function StepButton(props) {\n    return {\n      border: 'none',\n      margin: 0,\n      padding: 0,\n      cursor: 'pointer',\n      borderRadius: props.borderRadius,\n      backgroundColor: props.inactiveBgColor,\n      width: props.size,\n      height: props.size,\n      fontSize: '1em',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      '&.active': {\n        backgroundColor: props.activeBgColor,\n        '&:hover': {\n          backgroundColor: shadeOrTintColor(props.activeBgColor, HOVER_COLOR_DEFAULT_RATIO)\n        },\n        '&:active': {\n          backgroundColor: shadeOrTintColor(props.activeBgColor, ACTIVE_COLOR_DEFAULT_RATIO)\n        }\n      },\n      '&.completed': {\n        backgroundColor: props.completedBgColor,\n        '&:hover': {\n          backgroundColor: shadeOrTintColor(props.completedBgColor, HOVER_COLOR_DEFAULT_RATIO)\n        },\n        '&:active': {\n          backgroundColor: shadeOrTintColor(props.completedBgColor, ACTIVE_COLOR_DEFAULT_RATIO)\n        }\n      }\n    };\n  },\n  StepButtonContent: function StepButtonContent(props) {\n    return {\n      color: props.inactiveTextColor,\n      fontSize: props.circleFontSize,\n      fontVariantNumeric: 'tabular-nums',\n      '&.active': {\n        color: props.activeTextColor\n      },\n      '&.completed': {\n        color: props.completedTextColor\n      }\n    };\n  }\n});\nvar StepperContext = /*#__PURE__*/React__default.createContext({\n  activeStep: 0,\n  hideConnectors: false,\n  nonLinear: false,\n  connectorStateColors: false\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  StepperContext.displayName = 'StepperContext';\n}\n\nvar connectorStyleDefaults = {\n  disabledColor: '#bdbdbd',\n  activeColor: '#ed1d24',\n  completedColor: '#a10308',\n  size: 1,\n  style: 'solid'\n};\nvar useConnectorStyles = /*#__PURE__*/createUseStyles({\n  ConnectorContainer: function ConnectorContainer(props) {\n    return {\n      top: \"calc((\" + props.stepSize + \" - \" + props.size + \") / 2)\",\n      left: \"calc(-50% + \" + props.stepSize + \" - 8px)\",\n      right: \"calc(50% + \" + props.stepSize + \" - 8px)\",\n      position: 'absolute'\n    };\n  },\n  Connector: function Connector(props) {\n    return {\n      borderTopStyle: props.style,\n      borderTopWidth: props.size,\n      borderColor: props.disabledColor,\n      display: 'block',\n      '&.completed': {\n        borderColor: props.completedColor\n      },\n      '&.active': {\n        borderColor: props.activeColor\n      }\n    };\n  }\n});\n\nvar convertNumericToPixel = function convertNumericToPixel(object, property) {\n  if (typeof object[property] === 'number') {\n    object[property] = object[property] + \"px\";\n  }\n};\n\nvar StepContext = /*#__PURE__*/React__default.createContext({\n  completed: false,\n  active: false,\n  disabled: false,\n  index: 0\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  StepContext.displayName = 'StepContext';\n}\n\nvar Connector = function Connector() {\n  var _React$useContext = React__default.useContext(StepperContext),\n      connectorStateColors = _React$useContext.connectorStateColors,\n      connectorStyleConfig = _React$useContext.connectorStyleConfig;\n\n  var _React$useContext2 = React__default.useContext(StepContext),\n      completed = _React$useContext2.completed,\n      active = _React$useContext2.active,\n      stepSize = _React$useContext2.stepSize;\n\n  var connectorStyle = _extends({}, connectorStyleDefaults, connectorStyleConfig, {\n    stepSize: (connectorStyleConfig === null || connectorStyleConfig === void 0 ? void 0 : connectorStyleConfig.stepSize) || stepSize\n  });\n\n  convertNumericToPixel(connectorStyle, 'stepSize');\n  convertNumericToPixel(connectorStyle, 'size');\n  var classes = useConnectorStyles(connectorStyle);\n  return React__default.createElement(\"div\", {\n    id: \"RFS-ConnectorContainer\",\n    className: classes.ConnectorContainer\n  }, React__default.createElement(\"span\", {\n    id: \"RFS-Connector\",\n    className: clsx(classes.Connector, {\n      completed: completed && connectorStateColors\n    }, {\n      active: active && connectorStateColors\n    })\n  }));\n};\n\nvar _excluded = [\"children\", \"contentClasses\"];\n\nvar StepButton = function StepButton(_ref) {\n  var children = _ref.children,\n      contentClasses = _ref.contentClasses,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var _React$useContext = React__default.useContext(StepContext),\n      completed = _React$useContext.completed,\n      disabled = _React$useContext.disabled,\n      index = _React$useContext.index;\n\n  return React__default.createElement(\"button\", Object.assign({\n    disabled: disabled\n  }, rest), React__default.createElement(\"span\", {\n    className: clsx(contentClasses, {\n      active: !disabled && !completed\n    }, {\n      completed: completed\n    })\n  }, children || index + 1));\n};\n\nvar useStepLabelStyles = /*#__PURE__*/createUseStyles({\n  LabelContainer: function LabelContainer(props) {\n    return {\n      width: '100%',\n      fontSize: props.fontSize || '0.875rem',\n      fontWeight: 400,\n      lineHeight: 1.4\n    };\n  },\n  Label: function Label(props) {\n    return {\n      display: 'block',\n      marginTop: 16,\n      textAlign: 'center',\n      fontWeight: props.fontWeight || 500\n    };\n  }\n});\n\nvar StepLabel = function StepLabel(_ref) {\n  var children = _ref.children,\n      fontSize = _ref.fontSize,\n      fontWeight = _ref.fontWeight;\n  var classes = useStepLabelStyles({\n    fontSize: fontSize,\n    fontWeight: fontWeight\n  });\n  return React__default.createElement(\"div\", {\n    id: \"RFS-LabelContainer\",\n    className: classes.LabelContainer\n  }, React__default.createElement(\"span\", {\n    id: \"RFS-Label\",\n    className: classes.Label\n  }, children));\n};\n\nvar _excluded$1 = [\"children\", \"label\", \"styleConfig\", \"completed\", \"active\", \"disabled\", \"className\", \"index\"];\n\nvar Step = function Step(_ref) {\n  var children = _ref.children,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? '' : _ref$label,\n      styleConfig = _ref.styleConfig,\n      completedProp = _ref.completed,\n      activeProp = _ref.active,\n      disabledProp = _ref.disabled,\n      className = _ref.className,\n      _ref$index = _ref.index,\n      index = _ref$index === void 0 ? 0 : _ref$index,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n\n  var _React$useContext = useContext(StepperContext),\n      activeStep = _React$useContext.activeStep,\n      hideConnectors = _React$useContext.hideConnectors,\n      nonLinear = _React$useContext.nonLinear;\n\n  var _activeProp = activeProp,\n      active = _activeProp === void 0 ? false : _activeProp,\n      _completedProp = completedProp,\n      completed = _completedProp === void 0 ? false : _completedProp,\n      _disabledProp = disabledProp,\n      disabled = _disabledProp === void 0 ? false : _disabledProp;\n\n  if (activeStep === index) {\n    active = activeProp !== undefined ? activeProp : true;\n  } else if (!nonLinear && activeStep > index && !activeProp && !disabledProp) {\n    completed = completedProp !== undefined ? completedProp : true;\n  } else if (!nonLinear && activeStep < index && !activeProp && !completedProp) {\n    disabled = disabledProp !== undefined ? disabledProp : true;\n  }\n\n  var stepStyleProps = _extends({}, styleConfig, {\n    completed: completed && !disabled,\n    active: active || !disabled\n  });\n\n  var classes = useStepStyles(_extends({}, stepStyleDefaults, stepStyleProps.size && !stepStyleProps.circleFontSize && {\n    circleFontSize: \"calc(\" + stepStyleProps.size + \" / 2)\"\n  }, stepStyleProps));\n  var contextValue = {\n    completed: completed,\n    active: active,\n    disabled: disabled,\n    index: index,\n    stepSize: styleConfig && styleConfig.size || stepStyleDefaults.size\n  };\n  return createElement(StepContext.Provider, {\n    value: contextValue\n  }, index !== 0 && ( // If hideConnectors === 'inactive' render only active or completed connectors\n  // If hideConnectors is something other than 'inactive' or true render all connectors\n  hideConnectors === 'inactive' && (active || completed) || hideConnectors !== true && hideConnectors !== 'inactive') && createElement(Connector, null), createElement(\"div\", {\n    id: \"RFS-StepMain\",\n    className: classes.StepMain\n  }, createElement(StepButton, Object.assign({\n    id: \"RFS-StepButton\",\n    className: clsx(classes.StepButton, {\n      active: !disabled && !completed\n    }, {\n      completed: completed\n    }, className),\n    contentClasses: classes.StepButtonContent\n  }, rest), children || index + 1), label && createElement(StepLabel, {\n    fontSize: styleConfig === null || styleConfig === void 0 ? void 0 : styleConfig.labelFontSize,\n    fontWeight: styleConfig === null || styleConfig === void 0 ? void 0 : styleConfig.fontWeight\n  }, label)));\n};\n\nvar useStepperStyles = /*#__PURE__*/createUseStyles({\n  StepperContainer: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    flexDirection: 'row',\n    padding: 24,\n    fontFamily: 'Arial, Helvetica, sans-serif'\n  },\n  StepContainer: {\n    flex: 1,\n    position: 'relative',\n    paddingLeft: 8,\n    paddingRight: 8\n  }\n});\nvar _excluded$2 = [\"steps\", \"children\", \"connectorStateColors\", \"className\", \"stepClassName\", \"activeStep\", \"styleConfig\", \"connectorStyleConfig\", \"hideConnectors\", \"nonLinear\"]; // const createGenerateId: CreateGenerateId = () => {\n//   return generateId;\n// };\n// jss.setup({ createGenerateId });\n\nvar Stepper = function Stepper(_ref) {\n  var steps = _ref.steps,\n      children = _ref.children,\n      _ref$connectorStateCo = _ref.connectorStateColors,\n      connectorStateColors = _ref$connectorStateCo === void 0 ? false : _ref$connectorStateCo,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? '' : _ref$className,\n      _ref$stepClassName = _ref.stepClassName,\n      stepClassName = _ref$stepClassName === void 0 ? '' : _ref$stepClassName,\n      _ref$activeStep = _ref.activeStep,\n      activeStep = _ref$activeStep === void 0 ? 0 : _ref$activeStep,\n      styleConfig = _ref.styleConfig,\n      connectorStyleConfig = _ref.connectorStyleConfig,\n      _ref$hideConnectors = _ref.hideConnectors,\n      hideConnectors = _ref$hideConnectors === void 0 ? false : _ref$hideConnectors,\n      _ref$nonLinear = _ref.nonLinear,\n      nonLinear = _ref$nonLinear === void 0 ? false : _ref$nonLinear,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded$2);\n\n  var classes = useStepperStyles();\n  var contextValue = React__default.useMemo(function () {\n    return {\n      activeStep: activeStep,\n      hideConnectors: hideConnectors,\n      nonLinear: nonLinear,\n      connectorStateColors: connectorStateColors && !nonLinear,\n      connectorStyleConfig: connectorStyleConfig\n    };\n  }, [activeStep, hideConnectors, nonLinear, connectorStateColors, connectorStyleConfig]);\n  var useStepsProp = steps instanceof Array && steps.length > 0;\n  var stepsArray = useStepsProp ? steps : React__default.Children.toArray(children);\n  var stepsToRender = stepsArray.map(function (step, index) {\n    if (!useStepsProp && !React__default.isValidElement(step)) return null;\n    var stepProps = {\n      className: stepClassName,\n      styleConfig: styleConfig,\n      index: index\n    };\n    return React__default.createElement(\"div\", {\n      key: index,\n      id: \"RFS-StepContainer\",\n      className: classes.StepContainer\n    }, React__default.isValidElement(step) ? React__default.cloneElement(step, _extends({}, stepProps, step.props)) : React__default.createElement(Step, Object.assign({}, stepProps, typeof step === 'object' ? step : {})));\n  });\n  return React__default.createElement(StepperContext.Provider, {\n    value: contextValue\n  }, React__default.createElement(\"div\", Object.assign({\n    id: \"RFS-StepperContainer\",\n    className: clsx(classes.StepperContainer, className)\n  }, rest), stepsToRender));\n};\n\nexport { Step, Stepper };","map":{"version":3,"mappings":"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","names":["stepStyleDefaults","activeBgColor","activeTextColor","completedBgColor","completedTextColor","inactiveBgColor","inactiveTextColor","size","circleFontSize","borderRadius","HOVER_COLOR_DEFAULT_RATIO","ACTIVE_COLOR_DEFAULT_RATIO","shadeOrTintColor","colorString","ratio","color","Color","isDark","darken","hex","lighten","useStepStyles","createUseStyles","StepMain","display","flexDirection","alignItems","StepButton","props","border","margin","padding","cursor","backgroundColor","width","height","fontSize","justifyContent","StepButtonContent","fontVariantNumeric","StepperContext","React","createContext","activeStep","hideConnectors","nonLinear","connectorStateColors","process","env","NODE_ENV","displayName","connectorStyleDefaults","disabledColor","activeColor","completedColor","style","useConnectorStyles","ConnectorContainer","top","stepSize","left","right","position","Connector","borderTopStyle","borderTopWidth","borderColor","convertNumericToPixel","object","property","StepContext","completed","active","disabled","index","useContext","connectorStyleConfig","connectorStyle","classes","id","className","clsx","children","contentClasses","rest","useStepLabelStyles","LabelContainer","fontWeight","lineHeight","Label","marginTop","textAlign","StepLabel","Step","label","_ref$label","styleConfig","completedProp","activeProp","disabledProp","_ref$index","undefined","stepStyleProps","contextValue","Provider","value","labelFontSize","useStepperStyles","StepperContainer","fontFamily","StepContainer","flex","paddingLeft","paddingRight","Stepper","steps","_ref$connectorStateCo","_ref$className","stepClassName","_ref$stepClassName","_ref$activeStep","_ref$hideConnectors","_ref$nonLinear","useMemo","useStepsProp","Array","length","stepsArray","Children","toArray","stepsToRender","map","step","isValidElement","stepProps","key","cloneElement"],"sources":["D:\\React-projects\\01-starting-project\\node_modules\\react-form-stepper\\src\\components\\Step\\StepStyles.ts","D:\\React-projects\\01-starting-project\\node_modules\\react-form-stepper\\src\\components\\Stepper\\StepperContext.ts","D:\\React-projects\\01-starting-project\\node_modules\\react-form-stepper\\src\\components\\Connector\\ConnectorStyles.ts","D:\\React-projects\\01-starting-project\\node_modules\\react-form-stepper\\src\\utils.ts","D:\\React-projects\\01-starting-project\\node_modules\\react-form-stepper\\src\\components\\Step\\StepContext.ts","D:\\React-projects\\01-starting-project\\node_modules\\react-form-stepper\\src\\components\\Connector\\Connector.tsx","D:\\React-projects\\01-starting-project\\node_modules\\react-form-stepper\\src\\components\\StepButton\\StepButton.tsx","D:\\React-projects\\01-starting-project\\node_modules\\react-form-stepper\\src\\components\\StepLabel\\StepLabelStyles.ts","D:\\React-projects\\01-starting-project\\node_modules\\react-form-stepper\\src\\components\\StepLabel\\StepLabel.tsx","D:\\React-projects\\01-starting-project\\node_modules\\react-form-stepper\\src\\components\\Step\\Step.tsx","D:\\React-projects\\01-starting-project\\node_modules\\react-form-stepper\\src\\components\\Stepper\\StepperStyles.ts","D:\\React-projects\\01-starting-project\\node_modules\\react-form-stepper\\src\\components\\Stepper\\Stepper.tsx"],"sourcesContent":["import { createUseStyles } from 'react-jss';\nimport { StepStyleProps } from './StepTypes';\nimport Color from 'color';\n\nexport const stepStyleDefaults = {\n  activeBgColor: '#ed1d24',\n  activeTextColor: '#ffffff',\n  completedBgColor: '#a10308',\n  completedTextColor: '#ffffff',\n  inactiveBgColor: '#e0e0e0',\n  inactiveTextColor: '#ffffff',\n  size: '2em',\n  circleFontSize: '1rem',\n  borderRadius: '50%',\n};\n\nconst HOVER_COLOR_DEFAULT_RATIO = 0.15;\nconst ACTIVE_COLOR_DEFAULT_RATIO = 0.2;\n\nconst shadeOrTintColor = (colorString: string, ratio: number) => {\n  const color = Color(colorString);\n  return color.isDark()\n    ? color.darken(ratio).hex()\n    : color.lighten(ratio).hex();\n};\n\nexport const useStepStyles = createUseStyles({\n  StepMain: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  StepButton: (props: StepStyleProps) => ({\n    border: 'none',\n    margin: 0,\n    padding: 0,\n    cursor: 'pointer',\n    borderRadius: props.borderRadius,\n    backgroundColor: props.inactiveBgColor,\n    width: props.size,\n    height: props.size,\n    fontSize: '1em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '&.active': {\n      backgroundColor: props.activeBgColor,\n      '&:hover': {\n        backgroundColor: shadeOrTintColor(\n          props.activeBgColor,\n          HOVER_COLOR_DEFAULT_RATIO\n        ),\n      },\n      '&:active': {\n        backgroundColor: shadeOrTintColor(\n          props.activeBgColor,\n          ACTIVE_COLOR_DEFAULT_RATIO\n        ),\n      },\n    },\n    '&.completed': {\n      backgroundColor: props.completedBgColor,\n      '&:hover': {\n        backgroundColor: shadeOrTintColor(\n          props.completedBgColor,\n          HOVER_COLOR_DEFAULT_RATIO\n        ),\n      },\n      '&:active': {\n        backgroundColor: shadeOrTintColor(\n          props.completedBgColor,\n          ACTIVE_COLOR_DEFAULT_RATIO\n        ),\n      },\n    },\n  }),\n  StepButtonContent: (props: StepStyleProps) => ({\n    color: props.inactiveTextColor,\n    fontSize: props.circleFontSize,\n    fontVariantNumeric: 'tabular-nums',\n    '&.active': {\n      color: props.activeTextColor,\n    },\n    '&.completed': {\n      color: props.completedTextColor,\n    },\n  }),\n});\n","import React from 'react';\nimport { ConnectorStyleProps } from '../Connector/ConnectorTypes';\n\ninterface IStepperContext {\n  activeStep: number;\n  hideConnectors: boolean | 'inactive';\n  nonLinear: boolean;\n  connectorStateColors: boolean;\n  connectorStyleConfig?: ConnectorStyleProps;\n}\n\nconst StepperContext = React.createContext<IStepperContext>({\n  activeStep: 0,\n  hideConnectors: false,\n  nonLinear: false,\n  connectorStateColors: false,\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  StepperContext.displayName = 'StepperContext';\n}\n\nexport default StepperContext;\n","import { createUseStyles } from 'react-jss';\nimport { ConnectorStyleProps } from './ConnectorTypes';\n\nexport const connectorStyleDefaults: ConnectorStyleProps = {\n  disabledColor: '#bdbdbd',\n  activeColor: '#ed1d24',\n  completedColor: '#a10308',\n  size: 1,\n  style: 'solid',\n};\n\nexport const useConnectorStyles = createUseStyles({\n  ConnectorContainer: (props: ConnectorStyleProps) => ({\n    top: `calc((${props.stepSize} - ${props.size}) / 2)`,\n    left: `calc(-50% + ${props.stepSize} - 8px)`,\n    right: `calc(50% + ${props.stepSize} - 8px)`,\n    position: 'absolute',\n  }),\n  Connector: (props: ConnectorStyleProps) => ({\n    borderTopStyle: props.style,\n    borderTopWidth: props.size,\n    borderColor: props.disabledColor,\n    display: 'block',\n    '&.completed': {\n      borderColor: props.completedColor,\n    },\n    '&.active': {\n      borderColor: props.activeColor,\n    },\n  }),\n});\n","interface IObject {\n  [key: string]: any;\n}\n\nexport const convertNumericToPixel = (object: IObject, property: string) => {\n  if (typeof object[property] === 'number') {\n    object[property] = `${object[property]}px`;\n  }\n};\n","import React from 'react';\n\ninterface IStepContext {\n  completed: boolean;\n  active: boolean;\n  disabled: boolean;\n  index: number;\n  stepSize?: string | number;\n}\n\nconst StepContext = React.createContext<IStepContext>({\n  completed: false,\n  active: false,\n  disabled: false,\n  index: 0,\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  StepContext.displayName = 'StepContext';\n}\n\nexport default StepContext;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport { connectorStyleDefaults, useConnectorStyles } from './ConnectorStyles';\nimport { ConnectorStyleProps } from './ConnectorTypes';\nimport { convertNumericToPixel } from '../../utils';\nimport StepContext from '../Step/StepContext';\nimport StepperContext from '../Stepper/StepperContext';\n\nconst Connector: React.FC = () => {\n  const { connectorStateColors, connectorStyleConfig } =\n    React.useContext(StepperContext);\n  const { completed, active, stepSize } = React.useContext(StepContext);\n\n  const connectorStyle: ConnectorStyleProps = {\n    ...connectorStyleDefaults,\n    ...connectorStyleConfig,\n    stepSize: connectorStyleConfig?.stepSize || stepSize,\n  };\n\n  convertNumericToPixel(connectorStyle, 'stepSize');\n  convertNumericToPixel(connectorStyle, 'size');\n\n  const classes = useConnectorStyles(connectorStyle);\n  return (\n    <div id=\"RFS-ConnectorContainer\" className={classes.ConnectorContainer}>\n      <span\n        id=\"RFS-Connector\"\n        className={clsx(\n          classes.Connector,\n          { completed: completed && connectorStateColors },\n          { active: active && connectorStateColors }\n        )}\n      ></span>\n    </div>\n  );\n};\n\nexport default Connector;\n","import React from 'react';\nimport clsx from 'clsx';\nimport StepContext from '../Step/StepContext';\nimport { StepButtonProps } from './StepButtonProps';\n\nconst StepButton: React.FC<StepButtonProps> = ({\n  children,\n  contentClasses,\n  ...rest\n}) => {\n  const { completed, disabled, index } = React.useContext(StepContext);\n\n  return (\n    <button disabled={disabled} {...rest}>\n      <span\n        className={clsx(\n          contentClasses,\n          { active: !disabled && !completed },\n          { completed }\n        )}\n      >\n        {children || index + 1}\n      </span>\n    </button>\n  );\n};\n\nexport default StepButton;\n","import { createUseStyles } from 'react-jss';\nimport { StepLabelStyleProps } from './StepLabelTypes';\n\nexport const useStepLabelStyles = createUseStyles({\n  LabelContainer: (props: StepLabelStyleProps) => ({\n    width: '100%',\n    fontSize: props.fontSize || '0.875rem',\n    fontWeight: 400,\n    lineHeight: 1.4,\n  }),\n  Label: (props: StepLabelStyleProps) => ({\n    display: 'block',\n    marginTop: 16,\n    textAlign: 'center',\n    fontWeight: props.fontWeight || 500,\n  }),\n});\n","import React from 'react';\nimport { useStepLabelStyles } from './StepLabelStyles';\nimport { StepLabelProps } from './StepLabelTypes';\n\nconst StepLabel: React.FC<StepLabelProps> = ({\n  children,\n  fontSize,\n  fontWeight,\n}) => {\n  const classes = useStepLabelStyles({ fontSize, fontWeight });\n\n  return (\n    <div id=\"RFS-LabelContainer\" className={classes.LabelContainer}>\n      <span id=\"RFS-Label\" className={classes.Label}>\n        {children}\n      </span>\n    </div>\n  );\n};\n\nexport default StepLabel;\n","import * as React from 'react';\nimport clsx from 'clsx';\n\nimport { useStepStyles, stepStyleDefaults } from './StepStyles';\nimport StepperContext from '../Stepper/StepperContext';\nimport Connector from '../Connector';\nimport { StepProps, StepStyleProps } from './StepTypes';\nimport StepContext from './StepContext';\nimport StepButton from '../StepButton';\nimport StepLabel from '../StepLabel';\n\nconst Step: React.FC<StepProps> = ({\n  children,\n  label = '',\n  styleConfig,\n  completed: completedProp,\n  active: activeProp,\n  disabled: disabledProp,\n  className,\n  index = 0,\n  ...rest\n}) => {\n  const { activeStep, hideConnectors, nonLinear } =\n    React.useContext(StepperContext);\n\n  let [active = false, completed = false, disabled = false] = [\n    activeProp,\n    completedProp,\n    disabledProp,\n  ];\n\n  if (activeStep === index) {\n    active = activeProp !== undefined ? activeProp : true;\n  } else if (!nonLinear && activeStep > index && !activeProp && !disabledProp) {\n    completed = completedProp !== undefined ? completedProp : true;\n  } else if (\n    !nonLinear &&\n    activeStep < index &&\n    !activeProp &&\n    !completedProp\n  ) {\n    disabled = disabledProp !== undefined ? disabledProp : true;\n  }\n\n  const stepStyleProps: StepStyleProps = {\n    ...styleConfig!,\n    completed: completed && !disabled,\n    active: active || !disabled,\n  };\n  const classes = useStepStyles({\n    ...stepStyleDefaults,\n    ...(stepStyleProps.size &&\n      !stepStyleProps.circleFontSize && {\n        circleFontSize: `calc(${stepStyleProps.size} / 2)`,\n      }),\n    ...stepStyleProps,\n  });\n\n  const contextValue = {\n    completed,\n    active,\n    disabled,\n    index,\n    stepSize: (styleConfig && styleConfig.size) || stepStyleDefaults.size,\n  };\n\n  return (\n    <StepContext.Provider value={contextValue}>\n      {index !== 0 &&\n        // If hideConnectors === 'inactive' render only active or completed connectors\n        // If hideConnectors is something other than 'inactive' or true render all connectors\n        ((hideConnectors === 'inactive' && (active || completed)) ||\n          (hideConnectors !== true && hideConnectors !== 'inactive')) && (\n          <Connector />\n        )}\n      <div id=\"RFS-StepMain\" className={classes.StepMain}>\n        <StepButton\n          id=\"RFS-StepButton\"\n          className={clsx(\n            classes.StepButton,\n            { active: !disabled && !completed },\n            { completed },\n            className\n          )}\n          contentClasses={classes.StepButtonContent}\n          {...rest}\n        >\n          {children || index + 1}\n        </StepButton>\n        {label && (\n          <StepLabel\n            fontSize={styleConfig?.labelFontSize}\n            fontWeight={styleConfig?.fontWeight}\n          >\n            {label}\n          </StepLabel>\n        )}\n      </div>\n    </StepContext.Provider>\n  );\n};\n\nexport default Step;\n","import { createUseStyles } from 'react-jss';\n\nexport const useStepperStyles = createUseStyles({\n  StepperContainer: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    flexDirection: 'row',\n    padding: 24,\n    fontFamily: 'Arial, Helvetica, sans-serif',\n  },\n  StepContainer: {\n    flex: 1,\n    position: 'relative',\n    paddingLeft: 8,\n    paddingRight: 8,\n  },\n});\n","import React from 'react';\n// import { jss } from 'react-jss';\nimport clsx from 'clsx';\n// import { GenerateId, CreateGenerateId } from 'jss';\n\nimport Step from '../Step/Step';\nimport { StepperProps } from './StepperTypes';\nimport { useStepperStyles } from './StepperStyles';\nimport StepperContext from './StepperContext';\nimport { StepDTO } from '../Step/StepTypes';\n\n// const generateId: GenerateId = rule => `${rule.key}`;\n\n// const createGenerateId: CreateGenerateId = () => {\n//   return generateId;\n// };\n\n// jss.setup({ createGenerateId });\n\nconst Stepper: React.FC<StepperProps> = ({\n  steps,\n  children,\n  connectorStateColors = false,\n  className = '',\n  stepClassName = '',\n  activeStep = 0,\n  styleConfig,\n  connectorStyleConfig,\n  hideConnectors = false,\n  nonLinear = false,\n  ...rest\n}) => {\n  const classes = useStepperStyles();\n\n  const contextValue = React.useMemo(\n    () => ({\n      activeStep,\n      hideConnectors,\n      nonLinear,\n      connectorStateColors: connectorStateColors && !nonLinear,\n      connectorStyleConfig,\n    }),\n    [\n      activeStep,\n      hideConnectors,\n      nonLinear,\n      connectorStateColors,\n      connectorStyleConfig,\n    ]\n  );\n\n  const useStepsProp = steps instanceof Array && steps.length > 0;\n  const stepsArray = (useStepsProp\n    ? steps\n    : React.Children.toArray(children)) as Array<\n    | StepDTO\n    | (\n        | string\n        | number\n        | React.ReactElement<any, string | React.JSXElementConstructor<any>>\n        | React.ReactFragment\n        | React.ReactPortal\n      )\n  >;\n\n  const stepsToRender = stepsArray.map((step, index) => {\n    if (!useStepsProp && !React.isValidElement(step)) return null;\n\n    const stepProps = {\n      className: stepClassName,\n      styleConfig,\n      index,\n    };\n\n    return (\n      <div key={index} id=\"RFS-StepContainer\" className={classes.StepContainer}>\n        {React.isValidElement(step) ? (\n          React.cloneElement(step, {\n            ...stepProps,\n            ...step.props,\n          })\n        ) : (\n          <Step {...stepProps} {...(typeof step === 'object' ? step : {})} />\n        )}\n      </div>\n    );\n  });\n\n  return (\n    <StepperContext.Provider value={contextValue}>\n      <div\n        id=\"RFS-StepperContainer\"\n        className={clsx(classes.StepperContainer, className)}\n        {...rest}\n      >\n        {stepsToRender}\n      </div>\n    </StepperContext.Provider>\n  );\n};\n\nexport default Stepper;\n"]},"metadata":{},"sourceType":"module"}