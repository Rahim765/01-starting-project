{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _css from '@emotion/css';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/objectWithoutPropertiesLoose';\nimport { jsx } from '@emotion/core';\n\nvar makeStyles = function makeStyles(customStyles) {\n  return {\n    container: _extends({}, defaultStyles.container, customStyles.container),\n    containerDisabled: _extends({}, defaultStyles.containerDisabled, customStyles.containerDisabled),\n    track: _extends({}, defaultStyles.track, customStyles.track),\n    trackChecked: _extends({}, defaultStyles.trackChecked, customStyles.trackChecked),\n    button: _extends({}, defaultStyles.button, customStyles.button),\n    buttonChecked: _extends({}, defaultStyles.buttonChecked, customStyles.buttonChecked)\n  };\n};\n\nvar defaultStyles = {\n  container: {\n    position: 'relative',\n    display: 'inline-block',\n    width: 24,\n    height: 14,\n    verticalAlign: 'middle',\n    cursor: 'pointer',\n    userSelect: 'none'\n  },\n  containerDisabled: {\n    opacity: 0.7,\n    cursor: 'not-allowed'\n  },\n  track: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderRadius: 7,\n    backgroundColor: '#cccccc'\n  },\n  trackChecked: {\n    backgroundColor: '#5e72e4'\n  },\n  button: {\n    position: 'absolute',\n    top: 2,\n    bottom: 2,\n    right: 11,\n    left: 2,\n    backgroundColor: '#fff',\n    borderRadius: 9,\n    transition: 'all 100ms ease'\n  },\n  buttonChecked: {\n    right: 2,\n    left: 11\n  }\n};\n\nvar Switch = function Switch(_ref) {\n  var customStyles = _ref.styles,\n      on = _ref.on,\n      off = _ref.off,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      name = _ref.name,\n      disabled = _ref.disabled,\n      props = _objectWithoutPropertiesLoose(_ref, [\"styles\", \"on\", \"off\", \"value\", \"onChange\", \"name\", \"disabled\"]);\n\n  var checked = value === on;\n  var styles = makeStyles(customStyles);\n\n  function handleClick() {\n    if (onChange) {\n      onChange(checked ? off : on);\n    }\n  }\n\n  return jsx(\"label\", _extends({}, props, {\n    css: /*#__PURE__*/_css([styles.container, disabled && styles.containerDisabled]),\n    onClick: disabled ? null : handleClick\n  }), jsx(\"input\", {\n    type: \"hidden\",\n    name: name,\n    value: value\n  }), jsx(\"span\", {\n    css: /*#__PURE__*/_css([styles.track, checked && styles.trackChecked])\n  }), jsx(\"span\", {\n    css: /*#__PURE__*/_css([styles.button, checked && styles.buttonChecked])\n  }));\n};\n\nSwitch.defaultProps = {\n  value: 1,\n  on: 1,\n  off: 0,\n  disabled: false,\n  styles: {}\n};\nexport default Switch;","map":null,"metadata":{},"sourceType":"module"}