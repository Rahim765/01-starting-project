{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"D:\\\\React-projects\\\\01-starting-project\\\\src\\\\components\\\\steps\\\\Step3.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Step3 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: props.getStore().email,\n      gender: props.getStore().gender\n    };\n    this._validateOnDemand = true; // this flag enables onBlur validation as user fills forms\n\n    this.validationCheck = this.validationCheck.bind(this);\n    this.isValidated = this.isValidated.bind(this);\n  }\n\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  isValidated() {\n    const userInput = this._grabUserInput(); // grab user entered vals\n\n\n    const validateNewInput = this._validateData(userInput); // run the new input against the validator\n\n\n    let isDataValid = false; // if full validation passes then save to store and pass as valid\n\n    if (Object.keys(validateNewInput).every(k => {\n      return validateNewInput[k] === true;\n    })) {\n      if (this.props.getStore().email != userInput.email || this.props.getStore().gender != userInput.gender) {\n        // only update store of something changed\n        this.props.updateStore({ ...userInput,\n          savedToCloud: false // use this to notify step4 that some changes took place and prompt the user to save again\n\n        }); // Update store here (this is just an example, in reality you will do it via redux or flux)\n      }\n\n      isDataValid = true;\n    } else {\n      // if anything fails then update the UI validation state but NOT the UI Data State\n      this.setState(Object.assign(userInput, validateNewInput, this._validationErrors(validateNewInput)));\n    }\n\n    return isDataValid;\n  }\n\n  validationCheck() {\n    if (!this._validateOnDemand) return;\n\n    const userInput = this._grabUserInput(); // grab user entered vals\n\n\n    const validateNewInput = this._validateData(userInput); // run the new input against the validator\n\n\n    this.setState(Object.assign(userInput, validateNewInput, this._validationErrors(validateNewInput)));\n  }\n\n  _validateData(data) {\n    return {\n      genderVal: data.gender != 0,\n      // required: anything besides N/A\n      emailVal: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(data.email) // required: regex w3c uses in html5\n\n    };\n  }\n\n  _validationErrors(val) {\n    const errMsgs = {\n      genderValMsg: val.genderVal ? '' : 'A gender selection is required',\n      emailValMsg: val.emailVal ? '' : 'A valid email is required'\n    };\n    return errMsgs;\n  }\n\n  _grabUserInput() {\n    return {\n      gender: this.refs.gender.value,\n      email: this.refs.email.value\n    };\n  }\n\n  render() {\n    // explicit class assigning based on validation\n    let notValidClasses = {};\n\n    if (typeof this.state.genderVal == 'undefined' || this.state.genderVal) {\n      notValidClasses.genderCls = 'no-error col-md-8';\n    } else {\n      notValidClasses.genderCls = 'has-error col-md-8';\n      notValidClasses.genderValGrpCls = 'val-err-tooltip';\n    }\n\n    if (typeof this.state.emailVal == 'undefined' || this.state.emailVal) {\n      notValidClasses.emailCls = 'no-error col-md-8';\n    } else {\n      notValidClasses.emailCls = 'has-error col-md-8';\n      notValidClasses.emailValGrpCls = 'val-err-tooltip';\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step step3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"Form\",\n          className: \"form-horizontal\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-md-12 control-label\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Step 3: Basic JavaScript Validation Example\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: \"This example component has a form that uses local standard basic JavaScript validation.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-12 content form-block-holder\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"control-label col-md-4\",\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: notValidClasses.genderCls,\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                ref: \"gender\",\n                autoComplete: \"off\",\n                className: \"form-control\",\n                required: true,\n                defaultValue: this.state.gender,\n                onBlur: this.validationCheck,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Please select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Male\",\n                  children: \"Male\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Female\",\n                  children: \"Female\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Other\",\n                  children: \"Other\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: notValidClasses.genderValGrpCls,\n                children: this.state.genderValMsg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-12 content form-block-holder\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"control-label col-md-4\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: notValidClasses.emailCls,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ref: \"email\",\n                autoComplete: \"off\",\n                type: \"email\",\n                placeholder: \"john.smith@example.com\",\n                className: \"form-control\",\n                required: true,\n                defaultValue: this.state.email,\n                onBlur: this.validationCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: notValidClasses.emailValGrpCls,\n                children: this.state.emailValMsg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/React-projects/01-starting-project/src/components/steps/Step3.js"],"names":["React","Component","Step3","constructor","props","state","email","getStore","gender","_validateOnDemand","validationCheck","bind","isValidated","componentDidMount","componentWillUnmount","userInput","_grabUserInput","validateNewInput","_validateData","isDataValid","Object","keys","every","k","updateStore","savedToCloud","setState","assign","_validationErrors","data","genderVal","emailVal","test","val","errMsgs","genderValMsg","emailValMsg","refs","value","render","notValidClasses","genderCls","genderValGrpCls","emailCls","emailValGrpCls"],"mappings":"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","sourcesContent":["'use strict';\n\nimport React, { Component } from 'react';\n\nexport default class Step3 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: props.getStore().email,\n      gender: props.getStore().gender\n    };\n\n    this._validateOnDemand = true; // this flag enables onBlur validation as user fills forms\n\n    this.validationCheck = this.validationCheck.bind(this);\n    this.isValidated = this.isValidated.bind(this);\n  }\n\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  isValidated() {\n    const userInput = this._grabUserInput(); // grab user entered vals\n    const validateNewInput = this._validateData(userInput); // run the new input against the validator\n    let isDataValid = false;\n\n    // if full validation passes then save to store and pass as valid\n    if (Object.keys(validateNewInput).every((k) => { return validateNewInput[k] === true })) {\n        if (this.props.getStore().email != userInput.email || this.props.getStore().gender != userInput.gender) { // only update store of something changed\n          this.props.updateStore({\n            ...userInput,\n            savedToCloud: false // use this to notify step4 that some changes took place and prompt the user to save again\n          });  // Update store here (this is just an example, in reality you will do it via redux or flux)\n        }\n\n        isDataValid = true;\n    }\n    else {\n        // if anything fails then update the UI validation state but NOT the UI Data State\n        this.setState(Object.assign(userInput, validateNewInput, this._validationErrors(validateNewInput)));\n    }\n\n    return isDataValid;\n  }\n\n  validationCheck() {\n    if (!this._validateOnDemand)\n      return;\n\n    const userInput = this._grabUserInput(); // grab user entered vals\n    const validateNewInput = this._validateData(userInput); // run the new input against the validator\n\n    this.setState(Object.assign(userInput, validateNewInput, this._validationErrors(validateNewInput)));\n  }\n\n   _validateData(data) {\n    return  {\n      genderVal: (data.gender != 0), // required: anything besides N/A\n      emailVal: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(data.email), // required: regex w3c uses in html5\n    }\n  }\n\n  _validationErrors(val) {\n    const errMsgs = {\n      genderValMsg: val.genderVal ? '' : 'A gender selection is required',\n      emailValMsg: val.emailVal ? '' : 'A valid email is required'\n    }\n    return errMsgs;\n  }\n\n  _grabUserInput() {\n    return {\n      gender: this.refs.gender.value,\n      email: this.refs.email.value\n    };\n  }\n\n  render() {\n    // explicit class assigning based on validation\n    let notValidClasses = {};\n\n    if (typeof this.state.genderVal == 'undefined' || this.state.genderVal) {\n      notValidClasses.genderCls = 'no-error col-md-8';\n    }\n    else {\n       notValidClasses.genderCls = 'has-error col-md-8';\n       notValidClasses.genderValGrpCls = 'val-err-tooltip';\n    }\n\n    if (typeof this.state.emailVal == 'undefined' || this.state.emailVal) {\n        notValidClasses.emailCls = 'no-error col-md-8';\n    }\n    else {\n       notValidClasses.emailCls = 'has-error col-md-8';\n       notValidClasses.emailValGrpCls = 'val-err-tooltip';\n    }\n\n    return (\n      <div className=\"step step3\">\n        <div className=\"row\">\n          <form id=\"Form\" className=\"form-horizontal\">\n            <div className=\"form-group\">\n              <label className=\"col-md-12 control-label\">\n                <h1>Step 3: Basic JavaScript Validation Example</h1>\n              </label>\n            </div>\n            <div className=\"row content\">\n              <div className=\"col-md-12\">\n                This example component has a form that uses local standard basic JavaScript validation.\n              </div>\n            </div>\n            <div className=\"form-group col-md-12 content form-block-holder\">\n                <label className=\"control-label col-md-4\">\n                  Gender\n                </label>\n                <div className={notValidClasses.genderCls}>\n                  <select\n                    ref=\"gender\"\n                    autoComplete=\"off\"\n                    className=\"form-control\"\n                    required\n                    defaultValue={this.state.gender}\n                    onBlur={this.validationCheck}>\n                      <option value=\"\">Please select</option>\n                      <option value=\"Male\">Male</option>\n                      <option value=\"Female\">Female</option>\n                      <option value=\"Other\">Other</option>\n                  </select>\n                  <div className={notValidClasses.genderValGrpCls}>{this.state.genderValMsg}</div>\n                </div>\n              </div>\n              <div className=\"form-group col-md-12 content form-block-holder\">\n                <label className=\"control-label col-md-4\">\n                  Email\n                </label>\n                <div className={notValidClasses.emailCls}>\n                  <input\n                    ref=\"email\"\n                    autoComplete=\"off\"\n                    type=\"email\"\n                    placeholder=\"john.smith@example.com\"\n                    className=\"form-control\"\n                    required\n                    defaultValue={this.state.email}\n                    onBlur={this.validationCheck} />\n                  <div className={notValidClasses.emailValGrpCls}>{this.state.emailValMsg}</div>\n                </div>\n              </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}